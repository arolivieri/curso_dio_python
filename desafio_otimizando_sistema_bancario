# desafio - criando um sistema bancário
menu = """

[d] depositar
[s] sacar
[e] extrato
[u] criar usuario
[c] criar conta
[q] sair

=> """

saldo = 0
limite = 500
extrato = ""
numero_saques = 0
usuarios = []
contas = []
LIMITE_SAQUES = 3
AGENCIA = '0001'


def saque(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques > LIMITE_SAQUES

    if excedeu_saldo:
        print('O saldo é insuficiente!')
    elif excedeu_limite:
        print('Limite excedido!')
    elif excedeu_saques:
        print('Excedido o número de saques diários!')
    elif valor > 0:
        saldo += valor
        extrato += f'Saque efetuado: R$ {valor:.2f}\n'
        numero_saques += 1
    else:
        print('O valor informado é inválido!')
    return saldo, extrato


def deposito(saldo, valor, extrato, /):
    if valor < 0:
        print('O valor informado é inválido!')
    else:
        saldo += valor
        extrato += f'Depósito: R$ {valor:.2f}\n'
        print('deposito realizado com sucesso!')
    return saldo, extrato


def exibir_extrato(saldo, /, *, extrato):
    print('\n============EXTRATO============')
    print('Não foram realizadas movimentações.' if not extrato else extrato)
    print(f'\nSaldo: R$ {saldo:.2f}')
    print('=================================')


def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [
        usuario for usuario in usuarios if usuario['cpf'] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None


def criar_usuario(usuarios):
    cpf = input('Digite o cpf somente com numeros: ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('Ja existe um usuario com esse cpf cadastrado!')
        return

    nome = input('Digite o nome do usuario: ')
    dataNascimento = input(
        'Digite a data de nascimento no formato DD/MM/AAAA: ')
    endereco = input('Digite o endereco completo: ')

    usuarios.append({'nome': nome, 'dataNascimento': dataNascimento,
                    'cpf': cpf, 'endereco': endereco})

    print('Usuario cadastrado com sucesso!')


def criar_conta_corrente(agencia, numeroConta, usuario):
    cpf = input('Informe o numero do cpf sem os digitos: ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('Conta corrente criada com sucesso!')
        return {'agencia': agencia, 'numeroConta': numeroConta, 'usuario': usuario}

    print('Usuario nao encontrado!')


while True:

    opcao = input(menu)

    if opcao == 'd':
        valor = float(input('digite o valor a ser depositado: '))
        saldo, extrato = deposito(saldo, valor, extrato)

    elif opcao == 's':
        valor = float(input('Informe o valor do saque: '))
        saldo, extrato = saque(saldo=saldo, valor=valor, extrato=extrato,
                               limite=limite, numero_saques=numero_saques, limite_saques=LIMITE_SAQUES)

    elif opcao == 'e':
        exibir_extrato(saldo, extrato=extrato)

    elif opcao == 'u':
        criar_usuario(usuarios)

    elif opcao == 'c':
        numeroConta = len(contas) + 1
        conta = criar_conta_corrente(AGENCIA, numeroConta, usuarios)

        if conta:
            contas.append(conta)

    elif opcao == 'q':
        print('Obrigado por utilizar nossos serviços! Até Mais!')
        break

    else:
        print('Opção inválida, selecione uma opção novamente!')
